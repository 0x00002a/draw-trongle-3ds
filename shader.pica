; Hopefully, a PICA200 vertex shader (very very basic)

; Projection matrix uniform - loaded by the renderer before any given render
.fvec projMtx[4]

; Constant vec4 of all ones, as floats
.constf ones(1.0, 1.0, 1.0, 1.0)

; Output registers, written to by the shader
.out outpos pos
.out outclr clr

; Inputs (passed in through v0..=v15, with aliases for convenience)
.alias inpos v0
.alias inclr v1

; The actual shader function
.proc main
    ; r0.xyz = xyz components of inpos
    mov r0.xyz, inpos

    ; r0.w = w component of ones constant (1.0)
    mov r0.w, ones

    ; outpos = projectionMatrix * r0
    ; perform matrix * vector multiplication via dot product instruction one component at a time
    dp4 outpos.x, projMtx[0], r0
    dp4 outpos.y, projMtx[1], r0
    dp4 outpos.z, projMtx[2], r0
    dp4 outpos.w, projMtx[3], r0

    ; outclr = inclr
    mov outclr, inclr

    ; Done!
    end
.end ; main
